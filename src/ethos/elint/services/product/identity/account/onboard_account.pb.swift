// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: ethos/elint/services/product/identity/account/onboard_account.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// enum definations
enum Elint_Services_Product_Identity_AccountAuthMode: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case emailID // = 0
  case mobileNumber // = 1
  case UNRECOGNIZED(Int)

  init() {
    self = .emailID
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .emailID
    case 1: self = .mobileNumber
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .emailID: return 0
    case .mobileNumber: return 1
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Elint_Services_Product_Identity_AccountAuthMode: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Elint_Services_Product_Identity_AccountAuthMode] = [
    .emailID,
    .mobileNumber,
  ]
}

#endif  // swift(>=4.2)

enum Elint_Services_Product_Identity_AccountOnboardStatus: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case onboardable // = 0
  case onboarded // = 1
  case notOnboardable // = 2
  case UNRECOGNIZED(Int)

  init() {
    self = .onboardable
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .onboardable
    case 1: self = .onboarded
    case 2: self = .notOnboardable
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .onboardable: return 0
    case .onboarded: return 1
    case .notOnboardable: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Elint_Services_Product_Identity_AccountOnboardStatus: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Elint_Services_Product_Identity_AccountOnboardStatus] = [
    .onboardable,
    .onboarded,
    .notOnboardable,
  ]
}

#endif  // swift(>=4.2)

/// Generic Message Types
struct Elint_Services_Product_Identity_AccountDetails {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountName: String = String()

  var accountEmailID: String = String()

  var accountMobileNumber: String = String()

  var accountAuthMode: Elint_Services_Product_Identity_AccountAuthMode = .emailID

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// ClaimAccountRequest represents new Claim of Account 
struct Elint_Services_Product_Identity_OnboardAccountRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return self._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {self._accountDetails = nil}

  var requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _requestedAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_requestedAt = newValue}
  }
  /// Returns true if `requestedAt` has been explicitly set.
  var hasRequestedAt: Bool {return self._requestedAt != nil}
  /// Clears the value of `requestedAt`. Subsequent reads from it will return its default value.
  mutating func clearRequestedAt() {self._requestedAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
  fileprivate var _requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

/// ClaimAccountResponse returns about accountability of Claim 
struct Elint_Services_Product_Identity_OnboardAccountResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _storage._accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_uniqueStorage()._accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return _storage._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {_uniqueStorage()._accountDetails = nil}

  var accountOnboardStatus: Elint_Services_Product_Identity_AccountOnboardStatus {
    get {return _storage._accountOnboardStatus}
    set {_uniqueStorage()._accountOnboardStatus = newValue}
  }

  var verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails {
    get {return _storage._verificationCodeTokenDetails ?? Elint_Entity_TemporaryTokenDetails()}
    set {_uniqueStorage()._verificationCodeTokenDetails = newValue}
  }
  /// Returns true if `verificationCodeTokenDetails` has been explicitly set.
  var hasVerificationCodeTokenDetails: Bool {return _storage._verificationCodeTokenDetails != nil}
  /// Clears the value of `verificationCodeTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearVerificationCodeTokenDetails() {_uniqueStorage()._verificationCodeTokenDetails = nil}

  var onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails {
    get {return _storage._onboardSessionTokenDetails ?? Elint_Entity_PersistentSessionTokenDetails()}
    set {_uniqueStorage()._onboardSessionTokenDetails = newValue}
  }
  /// Returns true if `onboardSessionTokenDetails` has been explicitly set.
  var hasOnboardSessionTokenDetails: Bool {return _storage._onboardSessionTokenDetails != nil}
  /// Clears the value of `onboardSessionTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearOnboardSessionTokenDetails() {_uniqueStorage()._onboardSessionTokenDetails = nil}

  var codeSentAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._codeSentAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._codeSentAt = newValue}
  }
  /// Returns true if `codeSentAt` has been explicitly set.
  var hasCodeSentAt: Bool {return _storage._codeSentAt != nil}
  /// Clears the value of `codeSentAt`. Subsequent reads from it will return its default value.
  mutating func clearCodeSentAt() {_uniqueStorage()._codeSentAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _storage._accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_uniqueStorage()._accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return _storage._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {_uniqueStorage()._accountDetails = nil}

  var verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails {
    get {return _storage._verificationCodeTokenDetails ?? Elint_Entity_TemporaryTokenDetails()}
    set {_uniqueStorage()._verificationCodeTokenDetails = newValue}
  }
  /// Returns true if `verificationCodeTokenDetails` has been explicitly set.
  var hasVerificationCodeTokenDetails: Bool {return _storage._verificationCodeTokenDetails != nil}
  /// Clears the value of `verificationCodeTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearVerificationCodeTokenDetails() {_uniqueStorage()._verificationCodeTokenDetails = nil}

  var onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails {
    get {return _storage._onboardSessionTokenDetails ?? Elint_Entity_PersistentSessionTokenDetails()}
    set {_uniqueStorage()._onboardSessionTokenDetails = newValue}
  }
  /// Returns true if `onboardSessionTokenDetails` has been explicitly set.
  var hasOnboardSessionTokenDetails: Bool {return _storage._onboardSessionTokenDetails != nil}
  /// Clears the value of `onboardSessionTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearOnboardSessionTokenDetails() {_uniqueStorage()._onboardSessionTokenDetails = nil}

  var requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._requestedAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._requestedAt = newValue}
  }
  /// Returns true if `requestedAt` has been explicitly set.
  var hasRequestedAt: Bool {return _storage._requestedAt != nil}
  /// Clears the value of `requestedAt`. Subsequent reads from it will return its default value.
  mutating func clearRequestedAt() {_uniqueStorage()._requestedAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _storage._accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_uniqueStorage()._accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return _storage._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {_uniqueStorage()._accountDetails = nil}

  var verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails {
    get {return _storage._verificationCodeTokenDetails ?? Elint_Entity_TemporaryTokenDetails()}
    set {_uniqueStorage()._verificationCodeTokenDetails = newValue}
  }
  /// Returns true if `verificationCodeTokenDetails` has been explicitly set.
  var hasVerificationCodeTokenDetails: Bool {return _storage._verificationCodeTokenDetails != nil}
  /// Clears the value of `verificationCodeTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearVerificationCodeTokenDetails() {_uniqueStorage()._verificationCodeTokenDetails = nil}

  var onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails {
    get {return _storage._onboardSessionTokenDetails ?? Elint_Entity_PersistentSessionTokenDetails()}
    set {_uniqueStorage()._onboardSessionTokenDetails = newValue}
  }
  /// Returns true if `onboardSessionTokenDetails` has been explicitly set.
  var hasOnboardSessionTokenDetails: Bool {return _storage._onboardSessionTokenDetails != nil}
  /// Clears the value of `onboardSessionTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearOnboardSessionTokenDetails() {_uniqueStorage()._onboardSessionTokenDetails = nil}

  var codeSentAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._codeSentAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._codeSentAt = newValue}
  }
  /// Returns true if `codeSentAt` has been explicitly set.
  var hasCodeSentAt: Bool {return _storage._codeSentAt != nil}
  /// Clears the value of `codeSentAt`. Subsequent reads from it will return its default value.
  mutating func clearCodeSentAt() {_uniqueStorage()._codeSentAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct Elint_Services_Product_Identity_VerifyOnboardingAccountRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _storage._accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_uniqueStorage()._accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return _storage._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {_uniqueStorage()._accountDetails = nil}

  var verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails {
    get {return _storage._verificationCodeTokenDetails ?? Elint_Entity_TemporaryTokenDetails()}
    set {_uniqueStorage()._verificationCodeTokenDetails = newValue}
  }
  /// Returns true if `verificationCodeTokenDetails` has been explicitly set.
  var hasVerificationCodeTokenDetails: Bool {return _storage._verificationCodeTokenDetails != nil}
  /// Clears the value of `verificationCodeTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearVerificationCodeTokenDetails() {_uniqueStorage()._verificationCodeTokenDetails = nil}

  var verificationCode: String {
    get {return _storage._verificationCode}
    set {_uniqueStorage()._verificationCode = newValue}
  }

  var onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails {
    get {return _storage._onboardSessionTokenDetails ?? Elint_Entity_PersistentSessionTokenDetails()}
    set {_uniqueStorage()._onboardSessionTokenDetails = newValue}
  }
  /// Returns true if `onboardSessionTokenDetails` has been explicitly set.
  var hasOnboardSessionTokenDetails: Bool {return _storage._onboardSessionTokenDetails != nil}
  /// Clears the value of `onboardSessionTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearOnboardSessionTokenDetails() {_uniqueStorage()._onboardSessionTokenDetails = nil}

  var requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._requestedAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._requestedAt = newValue}
  }
  /// Returns true if `requestedAt` has been explicitly set.
  var hasRequestedAt: Bool {return _storage._requestedAt != nil}
  /// Clears the value of `requestedAt`. Subsequent reads from it will return its default value.
  mutating func clearRequestedAt() {_uniqueStorage()._requestedAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct Elint_Services_Product_Identity_VerifyOnboardingAccountResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _storage._accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_uniqueStorage()._accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return _storage._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {_uniqueStorage()._accountDetails = nil}

  var accountVerified: Bool {
    get {return _storage._accountVerified}
    set {_uniqueStorage()._accountVerified = newValue}
  }

  var verificationMessage: String {
    get {return _storage._verificationMessage}
    set {_uniqueStorage()._verificationMessage = newValue}
  }

  var onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails {
    get {return _storage._onboardSessionTokenDetails ?? Elint_Entity_PersistentSessionTokenDetails()}
    set {_uniqueStorage()._onboardSessionTokenDetails = newValue}
  }
  /// Returns true if `onboardSessionTokenDetails` has been explicitly set.
  var hasOnboardSessionTokenDetails: Bool {return _storage._onboardSessionTokenDetails != nil}
  /// Clears the value of `onboardSessionTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearOnboardSessionTokenDetails() {_uniqueStorage()._onboardSessionTokenDetails = nil}

  var onboardOrganizationName: String {
    get {return _storage._onboardOrganizationName}
    set {_uniqueStorage()._onboardOrganizationName = newValue}
  }

  var verifiedAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._verifiedAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._verifiedAt = newValue}
  }
  /// Returns true if `verifiedAt` has been explicitly set.
  var hasVerifiedAt: Bool {return _storage._verifiedAt != nil}
  /// Clears the value of `verifiedAt`. Subsequent reads from it will return its default value.
  mutating func clearVerifiedAt() {_uniqueStorage()._verifiedAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct Elint_Services_Product_Identity_AuthenticateOnboardedAccountRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return self._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {self._accountDetails = nil}

  var accountConveniencePin: String = String()

  var onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails {
    get {return _onboardSessionTokenDetails ?? Elint_Entity_PersistentSessionTokenDetails()}
    set {_onboardSessionTokenDetails = newValue}
  }
  /// Returns true if `onboardSessionTokenDetails` has been explicitly set.
  var hasOnboardSessionTokenDetails: Bool {return self._onboardSessionTokenDetails != nil}
  /// Clears the value of `onboardSessionTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearOnboardSessionTokenDetails() {self._onboardSessionTokenDetails = nil}

  var requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _requestedAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_requestedAt = newValue}
  }
  /// Returns true if `requestedAt` has been explicitly set.
  var hasRequestedAt: Bool {return self._requestedAt != nil}
  /// Clears the value of `requestedAt`. Subsequent reads from it will return its default value.
  mutating func clearRequestedAt() {self._requestedAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
  fileprivate var _onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails? = nil
  fileprivate var _requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

struct Elint_Services_Product_Identity_AuthenticateOnboardedAccountResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountDetails: Elint_Services_Product_Identity_AccountDetails {
    get {return _accountDetails ?? Elint_Services_Product_Identity_AccountDetails()}
    set {_accountDetails = newValue}
  }
  /// Returns true if `accountDetails` has been explicitly set.
  var hasAccountDetails: Bool {return self._accountDetails != nil}
  /// Clears the value of `accountDetails`. Subsequent reads from it will return its default value.
  mutating func clearAccountDetails() {self._accountDetails = nil}

  var accountAuthenticated: Bool = false

  var onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails {
    get {return _onboardSessionTokenDetails ?? Elint_Entity_PersistentSessionTokenDetails()}
    set {_onboardSessionTokenDetails = newValue}
  }
  /// Returns true if `onboardSessionTokenDetails` has been explicitly set.
  var hasOnboardSessionTokenDetails: Bool {return self._onboardSessionTokenDetails != nil}
  /// Clears the value of `onboardSessionTokenDetails`. Subsequent reads from it will return its default value.
  mutating func clearOnboardSessionTokenDetails() {self._onboardSessionTokenDetails = nil}

  var authenticatedAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _authenticatedAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_authenticatedAt = newValue}
  }
  /// Returns true if `authenticatedAt` has been explicitly set.
  var hasAuthenticatedAt: Bool {return self._authenticatedAt != nil}
  /// Clears the value of `authenticatedAt`. Subsequent reads from it will return its default value.
  mutating func clearAuthenticatedAt() {self._authenticatedAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
  fileprivate var _onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails? = nil
  fileprivate var _authenticatedAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "elint.services.product.identity"

extension Elint_Services_Product_Identity_AccountAuthMode: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "EMAIL_ID"),
    1: .same(proto: "MOBILE_NUMBER"),
  ]
}

extension Elint_Services_Product_Identity_AccountOnboardStatus: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ONBOARDABLE"),
    1: .same(proto: "ONBOARDED"),
    2: .same(proto: "NOT_ONBOARDABLE"),
  ]
}

extension Elint_Services_Product_Identity_AccountDetails: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".AccountDetails"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_name"),
    2: .standard(proto: "account_email_id"),
    3: .standard(proto: "account_mobile_number"),
    4: .standard(proto: "account_auth_mode"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.accountName) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.accountEmailID) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.accountMobileNumber) }()
      case 4: try { try decoder.decodeSingularEnumField(value: &self.accountAuthMode) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.accountName.isEmpty {
      try visitor.visitSingularStringField(value: self.accountName, fieldNumber: 1)
    }
    if !self.accountEmailID.isEmpty {
      try visitor.visitSingularStringField(value: self.accountEmailID, fieldNumber: 2)
    }
    if !self.accountMobileNumber.isEmpty {
      try visitor.visitSingularStringField(value: self.accountMobileNumber, fieldNumber: 3)
    }
    if self.accountAuthMode != .emailID {
      try visitor.visitSingularEnumField(value: self.accountAuthMode, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_AccountDetails, rhs: Elint_Services_Product_Identity_AccountDetails) -> Bool {
    if lhs.accountName != rhs.accountName {return false}
    if lhs.accountEmailID != rhs.accountEmailID {return false}
    if lhs.accountMobileNumber != rhs.accountMobileNumber {return false}
    if lhs.accountAuthMode != rhs.accountAuthMode {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_OnboardAccountRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".OnboardAccountRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "requested_at"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._accountDetails) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._requestedAt) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._accountDetails {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._requestedAt {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_OnboardAccountRequest, rhs: Elint_Services_Product_Identity_OnboardAccountRequest) -> Bool {
    if lhs._accountDetails != rhs._accountDetails {return false}
    if lhs._requestedAt != rhs._requestedAt {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_OnboardAccountResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".OnboardAccountResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "account_onboard_status"),
    3: .standard(proto: "verification_code_token_details"),
    4: .standard(proto: "onboard_session_token_details"),
    5: .standard(proto: "code_sent_at"),
  ]

  fileprivate class _StorageClass {
    var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
    var _accountOnboardStatus: Elint_Services_Product_Identity_AccountOnboardStatus = .onboardable
    var _verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails? = nil
    var _onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails? = nil
    var _codeSentAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _accountDetails = source._accountDetails
      _accountOnboardStatus = source._accountOnboardStatus
      _verificationCodeTokenDetails = source._verificationCodeTokenDetails
      _onboardSessionTokenDetails = source._onboardSessionTokenDetails
      _codeSentAt = source._codeSentAt
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._accountDetails) }()
        case 2: try { try decoder.decodeSingularEnumField(value: &_storage._accountOnboardStatus) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._verificationCodeTokenDetails) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._onboardSessionTokenDetails) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._codeSentAt) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._accountDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._accountOnboardStatus != .onboardable {
        try visitor.visitSingularEnumField(value: _storage._accountOnboardStatus, fieldNumber: 2)
      }
      if let v = _storage._verificationCodeTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._onboardSessionTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._codeSentAt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_OnboardAccountResponse, rhs: Elint_Services_Product_Identity_OnboardAccountResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._accountDetails != rhs_storage._accountDetails {return false}
        if _storage._accountOnboardStatus != rhs_storage._accountOnboardStatus {return false}
        if _storage._verificationCodeTokenDetails != rhs_storage._verificationCodeTokenDetails {return false}
        if _storage._onboardSessionTokenDetails != rhs_storage._onboardSessionTokenDetails {return false}
        if _storage._codeSentAt != rhs_storage._codeSentAt {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ReRequestCodeOnboardingAccountRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "verification_code_token_details"),
    3: .standard(proto: "onboard_session_token_details"),
    4: .standard(proto: "requested_at"),
  ]

  fileprivate class _StorageClass {
    var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
    var _verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails? = nil
    var _onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails? = nil
    var _requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _accountDetails = source._accountDetails
      _verificationCodeTokenDetails = source._verificationCodeTokenDetails
      _onboardSessionTokenDetails = source._onboardSessionTokenDetails
      _requestedAt = source._requestedAt
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._accountDetails) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._verificationCodeTokenDetails) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._onboardSessionTokenDetails) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._requestedAt) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._accountDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._verificationCodeTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._onboardSessionTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._requestedAt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountRequest, rhs: Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._accountDetails != rhs_storage._accountDetails {return false}
        if _storage._verificationCodeTokenDetails != rhs_storage._verificationCodeTokenDetails {return false}
        if _storage._onboardSessionTokenDetails != rhs_storage._onboardSessionTokenDetails {return false}
        if _storage._requestedAt != rhs_storage._requestedAt {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ReRequestCodeOnboardingAccountResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "verification_code_token_details"),
    3: .standard(proto: "onboard_session_token_details"),
    4: .standard(proto: "code_sent_at"),
  ]

  fileprivate class _StorageClass {
    var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
    var _verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails? = nil
    var _onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails? = nil
    var _codeSentAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _accountDetails = source._accountDetails
      _verificationCodeTokenDetails = source._verificationCodeTokenDetails
      _onboardSessionTokenDetails = source._onboardSessionTokenDetails
      _codeSentAt = source._codeSentAt
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._accountDetails) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._verificationCodeTokenDetails) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._onboardSessionTokenDetails) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._codeSentAt) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._accountDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._verificationCodeTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._onboardSessionTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._codeSentAt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountResponse, rhs: Elint_Services_Product_Identity_ReRequestCodeOnboardingAccountResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._accountDetails != rhs_storage._accountDetails {return false}
        if _storage._verificationCodeTokenDetails != rhs_storage._verificationCodeTokenDetails {return false}
        if _storage._onboardSessionTokenDetails != rhs_storage._onboardSessionTokenDetails {return false}
        if _storage._codeSentAt != rhs_storage._codeSentAt {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_VerifyOnboardingAccountRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".VerifyOnboardingAccountRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "verification_code_token_details"),
    3: .standard(proto: "verification_code"),
    4: .standard(proto: "onboard_session_token_details"),
    5: .standard(proto: "requested_at"),
  ]

  fileprivate class _StorageClass {
    var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
    var _verificationCodeTokenDetails: Elint_Entity_TemporaryTokenDetails? = nil
    var _verificationCode: String = String()
    var _onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails? = nil
    var _requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _accountDetails = source._accountDetails
      _verificationCodeTokenDetails = source._verificationCodeTokenDetails
      _verificationCode = source._verificationCode
      _onboardSessionTokenDetails = source._onboardSessionTokenDetails
      _requestedAt = source._requestedAt
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._accountDetails) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._verificationCodeTokenDetails) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._verificationCode) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._onboardSessionTokenDetails) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._requestedAt) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._accountDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._verificationCodeTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._verificationCode.isEmpty {
        try visitor.visitSingularStringField(value: _storage._verificationCode, fieldNumber: 3)
      }
      if let v = _storage._onboardSessionTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._requestedAt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_VerifyOnboardingAccountRequest, rhs: Elint_Services_Product_Identity_VerifyOnboardingAccountRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._accountDetails != rhs_storage._accountDetails {return false}
        if _storage._verificationCodeTokenDetails != rhs_storage._verificationCodeTokenDetails {return false}
        if _storage._verificationCode != rhs_storage._verificationCode {return false}
        if _storage._onboardSessionTokenDetails != rhs_storage._onboardSessionTokenDetails {return false}
        if _storage._requestedAt != rhs_storage._requestedAt {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_VerifyOnboardingAccountResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".VerifyOnboardingAccountResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "account_verified"),
    3: .standard(proto: "verification_message"),
    4: .standard(proto: "onboard_session_token_details"),
    5: .standard(proto: "onboard_organization_name"),
    6: .standard(proto: "verified_at"),
  ]

  fileprivate class _StorageClass {
    var _accountDetails: Elint_Services_Product_Identity_AccountDetails? = nil
    var _accountVerified: Bool = false
    var _verificationMessage: String = String()
    var _onboardSessionTokenDetails: Elint_Entity_PersistentSessionTokenDetails? = nil
    var _onboardOrganizationName: String = String()
    var _verifiedAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _accountDetails = source._accountDetails
      _accountVerified = source._accountVerified
      _verificationMessage = source._verificationMessage
      _onboardSessionTokenDetails = source._onboardSessionTokenDetails
      _onboardOrganizationName = source._onboardOrganizationName
      _verifiedAt = source._verifiedAt
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._accountDetails) }()
        case 2: try { try decoder.decodeSingularBoolField(value: &_storage._accountVerified) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._verificationMessage) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._onboardSessionTokenDetails) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._onboardOrganizationName) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._verifiedAt) }()
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._accountDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._accountVerified != false {
        try visitor.visitSingularBoolField(value: _storage._accountVerified, fieldNumber: 2)
      }
      if !_storage._verificationMessage.isEmpty {
        try visitor.visitSingularStringField(value: _storage._verificationMessage, fieldNumber: 3)
      }
      if let v = _storage._onboardSessionTokenDetails {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if !_storage._onboardOrganizationName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._onboardOrganizationName, fieldNumber: 5)
      }
      if let v = _storage._verifiedAt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_VerifyOnboardingAccountResponse, rhs: Elint_Services_Product_Identity_VerifyOnboardingAccountResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._accountDetails != rhs_storage._accountDetails {return false}
        if _storage._accountVerified != rhs_storage._accountVerified {return false}
        if _storage._verificationMessage != rhs_storage._verificationMessage {return false}
        if _storage._onboardSessionTokenDetails != rhs_storage._onboardSessionTokenDetails {return false}
        if _storage._onboardOrganizationName != rhs_storage._onboardOrganizationName {return false}
        if _storage._verifiedAt != rhs_storage._verifiedAt {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_AuthenticateOnboardedAccountRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".AuthenticateOnboardedAccountRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "account_convenience_pin"),
    3: .standard(proto: "onboard_session_token_details"),
    4: .standard(proto: "requested_at"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._accountDetails) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.accountConveniencePin) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._onboardSessionTokenDetails) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._requestedAt) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._accountDetails {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if !self.accountConveniencePin.isEmpty {
      try visitor.visitSingularStringField(value: self.accountConveniencePin, fieldNumber: 2)
    }
    if let v = self._onboardSessionTokenDetails {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if let v = self._requestedAt {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_AuthenticateOnboardedAccountRequest, rhs: Elint_Services_Product_Identity_AuthenticateOnboardedAccountRequest) -> Bool {
    if lhs._accountDetails != rhs._accountDetails {return false}
    if lhs.accountConveniencePin != rhs.accountConveniencePin {return false}
    if lhs._onboardSessionTokenDetails != rhs._onboardSessionTokenDetails {return false}
    if lhs._requestedAt != rhs._requestedAt {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Identity_AuthenticateOnboardedAccountResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".AuthenticateOnboardedAccountResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_details"),
    2: .standard(proto: "account_authenticated"),
    3: .standard(proto: "onboard_session_token_details"),
    4: .standard(proto: "authenticated_at"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._accountDetails) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.accountAuthenticated) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._onboardSessionTokenDetails) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._authenticatedAt) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._accountDetails {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if self.accountAuthenticated != false {
      try visitor.visitSingularBoolField(value: self.accountAuthenticated, fieldNumber: 2)
    }
    if let v = self._onboardSessionTokenDetails {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if let v = self._authenticatedAt {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Identity_AuthenticateOnboardedAccountResponse, rhs: Elint_Services_Product_Identity_AuthenticateOnboardedAccountResponse) -> Bool {
    if lhs._accountDetails != rhs._accountDetails {return false}
    if lhs.accountAuthenticated != rhs.accountAuthenticated {return false}
    if lhs._onboardSessionTokenDetails != rhs._onboardSessionTokenDetails {return false}
    if lhs._authenticatedAt != rhs._authenticatedAt {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
