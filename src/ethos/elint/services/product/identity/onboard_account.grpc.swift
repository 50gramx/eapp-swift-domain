//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: ethos/elint/services/product/identity/onboard_account.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate `Elint_Services_Product_OnboardAccountServiceClient`, then call methods of this protocol to make API calls.
internal protocol Elint_Services_Product_OnboardAccountServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Elint_Services_Product_OnboardAccountServiceClientInterceptorFactoryProtocol? { get }

  func claimAccount(
    _ request: Elint_Services_Product_ClaimAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Elint_Services_Product_ClaimAccountRequest, Elint_Services_Product_ClaimAccountResponse>

  func reRequestCodeClaimingAccount(
    _ request: Elint_Services_Product_ReRequestCodeClaimingAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Elint_Services_Product_ReRequestCodeClaimingAccountRequest, Elint_Services_Product_ReRequestCodeClaimingAccountResponse>

  func verifyClaimedAccount(
    _ request: Elint_Services_Product_VerifyClaimAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Elint_Services_Product_VerifyClaimAccountRequest, Elint_Services_Product_VerifyClaimAccountResponse>

  func authenticateClaimedAccount(
    _ request: Elint_Services_Product_AuthenticateClaimedAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Elint_Services_Product_AuthenticateClaimedAccountRequest, Elint_Services_Product_AuthenticateClaimedAccountResponse>

  func authenticateWithMobileNumber(
    _ request: Elint_Services_Product_AuthenticateWithMobileNumberRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Elint_Services_Product_AuthenticateWithMobileNumberRequest, Elint_Services_Product_AuthenticateWithMobileNumberResponse>
}

extension Elint_Services_Product_OnboardAccountServiceClientProtocol {
  internal var serviceName: String {
    return "elint.services.product.OnboardAccountService"
  }

  /// Unary call to ClaimAccount
  ///
  /// - Parameters:
  ///   - request: Request to send to ClaimAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func claimAccount(
    _ request: Elint_Services_Product_ClaimAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Elint_Services_Product_ClaimAccountRequest, Elint_Services_Product_ClaimAccountResponse> {
    return self.makeUnaryCall(
      path: "/elint.services.product.OnboardAccountService/ClaimAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClaimAccountInterceptors() ?? []
    )
  }

  /// Unary call to ReRequestCodeClaimingAccount
  ///
  /// - Parameters:
  ///   - request: Request to send to ReRequestCodeClaimingAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func reRequestCodeClaimingAccount(
    _ request: Elint_Services_Product_ReRequestCodeClaimingAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Elint_Services_Product_ReRequestCodeClaimingAccountRequest, Elint_Services_Product_ReRequestCodeClaimingAccountResponse> {
    return self.makeUnaryCall(
      path: "/elint.services.product.OnboardAccountService/ReRequestCodeClaimingAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReRequestCodeClaimingAccountInterceptors() ?? []
    )
  }

  /// Unary call to VerifyClaimedAccount
  ///
  /// - Parameters:
  ///   - request: Request to send to VerifyClaimedAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func verifyClaimedAccount(
    _ request: Elint_Services_Product_VerifyClaimAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Elint_Services_Product_VerifyClaimAccountRequest, Elint_Services_Product_VerifyClaimAccountResponse> {
    return self.makeUnaryCall(
      path: "/elint.services.product.OnboardAccountService/VerifyClaimedAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifyClaimedAccountInterceptors() ?? []
    )
  }

  /// Unary call to AuthenticateClaimedAccount
  ///
  /// - Parameters:
  ///   - request: Request to send to AuthenticateClaimedAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func authenticateClaimedAccount(
    _ request: Elint_Services_Product_AuthenticateClaimedAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Elint_Services_Product_AuthenticateClaimedAccountRequest, Elint_Services_Product_AuthenticateClaimedAccountResponse> {
    return self.makeUnaryCall(
      path: "/elint.services.product.OnboardAccountService/AuthenticateClaimedAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAuthenticateClaimedAccountInterceptors() ?? []
    )
  }

  /// Unary call to AuthenticateWithMobileNumber
  ///
  /// - Parameters:
  ///   - request: Request to send to AuthenticateWithMobileNumber.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func authenticateWithMobileNumber(
    _ request: Elint_Services_Product_AuthenticateWithMobileNumberRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Elint_Services_Product_AuthenticateWithMobileNumberRequest, Elint_Services_Product_AuthenticateWithMobileNumberResponse> {
    return self.makeUnaryCall(
      path: "/elint.services.product.OnboardAccountService/AuthenticateWithMobileNumber",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAuthenticateWithMobileNumberInterceptors() ?? []
    )
  }
}

internal protocol Elint_Services_Product_OnboardAccountServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'claimAccount'.
  func makeClaimAccountInterceptors() -> [ClientInterceptor<Elint_Services_Product_ClaimAccountRequest, Elint_Services_Product_ClaimAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'reRequestCodeClaimingAccount'.
  func makeReRequestCodeClaimingAccountInterceptors() -> [ClientInterceptor<Elint_Services_Product_ReRequestCodeClaimingAccountRequest, Elint_Services_Product_ReRequestCodeClaimingAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'verifyClaimedAccount'.
  func makeVerifyClaimedAccountInterceptors() -> [ClientInterceptor<Elint_Services_Product_VerifyClaimAccountRequest, Elint_Services_Product_VerifyClaimAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'authenticateClaimedAccount'.
  func makeAuthenticateClaimedAccountInterceptors() -> [ClientInterceptor<Elint_Services_Product_AuthenticateClaimedAccountRequest, Elint_Services_Product_AuthenticateClaimedAccountResponse>]

  /// - Returns: Interceptors to use when invoking 'authenticateWithMobileNumber'.
  func makeAuthenticateWithMobileNumberInterceptors() -> [ClientInterceptor<Elint_Services_Product_AuthenticateWithMobileNumberRequest, Elint_Services_Product_AuthenticateWithMobileNumberResponse>]
}

internal final class Elint_Services_Product_OnboardAccountServiceClient: Elint_Services_Product_OnboardAccountServiceClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Elint_Services_Product_OnboardAccountServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the elint.services.product.OnboardAccountService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Elint_Services_Product_OnboardAccountServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

