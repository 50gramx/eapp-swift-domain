// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: ethos/elint/services/product/knowledge/space_knowledge_domain/discover_space_knowledge_domain.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var accountSpaceKnowledgeDomainAccessMeta: Elint_Entity_AccountSpaceKnowledgeDomainAccessMeta {
    get {return _accountSpaceKnowledgeDomainAccessMeta ?? Elint_Entity_AccountSpaceKnowledgeDomainAccessMeta()}
    set {_accountSpaceKnowledgeDomainAccessMeta = newValue}
  }
  /// Returns true if `accountSpaceKnowledgeDomainAccessMeta` has been explicitly set.
  var hasAccountSpaceKnowledgeDomainAccessMeta: Bool {return self._accountSpaceKnowledgeDomainAccessMeta != nil}
  /// Clears the value of `accountSpaceKnowledgeDomainAccessMeta`. Subsequent reads from it will return its default value.
  mutating func clearAccountSpaceKnowledgeDomainAccessMeta() {self._accountSpaceKnowledgeDomainAccessMeta = nil}

  var requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _requestedAt ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_requestedAt = newValue}
  }
  /// Returns true if `requestedAt` has been explicitly set.
  var hasRequestedAt: Bool {return self._requestedAt != nil}
  /// Clears the value of `requestedAt`. Subsequent reads from it will return its default value.
  mutating func clearRequestedAt() {self._requestedAt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _accountSpaceKnowledgeDomainAccessMeta: Elint_Entity_AccountSpaceKnowledgeDomainAccessMeta? = nil
  fileprivate var _requestedAt: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

struct Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var files: [Elint_Entity_SpaceKnowledgeDomainFile] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "elint.services.product.knowledge.domain"

extension Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GetKnowledgeDomainFilesRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_space_knowledge_domain_access_meta"),
    2: .standard(proto: "requested_at"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._accountSpaceKnowledgeDomainAccessMeta) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._requestedAt) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._accountSpaceKnowledgeDomainAccessMeta {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._requestedAt {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesRequest, rhs: Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesRequest) -> Bool {
    if lhs._accountSpaceKnowledgeDomainAccessMeta != rhs._accountSpaceKnowledgeDomainAccessMeta {return false}
    if lhs._requestedAt != rhs._requestedAt {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GetKnowledgeDomainFilesResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "files"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.files) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.files.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.files, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesResponse, rhs: Elint_Services_Product_Knowledge_Domain_GetKnowledgeDomainFilesResponse) -> Bool {
    if lhs.files != rhs.files {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
